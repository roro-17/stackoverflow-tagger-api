version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "${API_PORT:-5000}:5000"
    volumes:
      - .:/app
    restart: always
    env_file:
      - .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5002


  mlflow-ui:
    image: ghcr.io/mlflow/mlflow:latest
    ports:
      - "${MLFLOW_UI_PORT:-5002}:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
      - ./mlflow.db:/mlflow.db
    command: mlflow ui --host 0.0.0.0 --port 5000

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: mlflowadmin
      MINIO_ROOT_PASSWORD: mlflowsecret
    command: server /data --console-address ":${MINIO_CONSOLE_PORT:-9001}"
    volumes:
      - minio-data:/data

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 10 &&
        mc alias set local http://minio:9000 mlflowadmin mlflowsecret &&
        mc mb local/mlflow || true
      "

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./provisioning/dashboards.yaml:/etc/grafana/provisioning/dashboards.yaml

  mlflow-runner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: mlflow run . -e evaluate --env-manager local
    volumes:
      - .:/app
    depends_on:
      - mlflow-ui
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5002

  mlflow_exporter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python monitoring/mlflow_exporter.py
    ports:
      - "${MLFLOW_EXPORTER_PORT:-8001}:8001"
    depends_on:
      - mlflow-ui
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-ui:5000
    restart: unless-stopped

  log-example:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python app/scripts/log_example_run.py
    depends_on:
      - mlflow-ui
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-ui:5000



volumes:
  minio-data:
  grafana-storage: